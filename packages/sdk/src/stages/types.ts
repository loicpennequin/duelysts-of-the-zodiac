import type { Values } from '@dotz/shared';

export const StageLayerType = {
  TILES: 'tilelayer',
  OBJECTS: 'objectgroup'
} as const;
export type StageLayerType = Values<typeof StageLayerType>;

export const TileProp = {
  90: '90',
  180: '180',
  270: '270',
  WALKABLE: 'walkable',
  WALLS: 'walls',
  SLOPE: 'slope'
} as const;
export type TileProp = Values<typeof TileProp>;

export interface StageMeta {
  compressionlevel: number;
  height: number;
  infinite: boolean;
  layers: Layer[];
  nextlayerid: number;
  nextobjectid: number;
  orientation: string;
  renderorder: string;
  tiledversion: string;
  tileheight: number;
  tilesets: Tileset[];
  tilewidth: number;
  type: string;
  version: string;
  width: number;
}

export interface Layer {
  data: number[];
  height: number;
  id: number;
  name: string;
  opacity: number;
  type: string;
  visible: boolean;
  width: number;
  x: number;
  y: number;
}

export interface Tileset {
  firstgid: number;
  source: string;
}
// Generated by https://quicktype.io

export interface TilesetMeta {
  columns: number;
  image: string;
  imageheight: number;
  imagewidth: number;
  margin: number;
  name: string;
  spacing: number;
  tilecount: number;
  tiledversion: string;
  tileheight: number;
  tilewidth: number;
  type: string;
  version: string;
}
export type Stage = {
  id: string;
  map: StageMeta;
  tileset: TilesetMeta;
};
