generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String              @id @unique @default(cuid())
  createdAt          DateTime            @default(now())
  updatedAt          DateTime?           @updatedAt
  email              String              @unique
  username           String?
  usernameTag        String?             @db.VarChar(4)
  passwordHash       String              @unique
  matchmakingRating  Int                 @default(1200)
  refreshToken       RefreshToken?
  passwordResetToken PasswordResetToken?
  gameUsers          GameUser[]

  @@unique([username, usernameTag])
}

model RefreshToken {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  value     String   @unique @db.VarChar(200)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model PasswordResetToken {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  value     String   @unique @db.VarChar(200)
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model Game {
  id        String     @id @unique @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime?  @updatedAt
  endedAt   DateTime?
  gameUsers GameUser[]
}

model GameUser {
  userId  String
  gameId  String
  user    User     @relation(fields: [userId], references: [id])
  game    Game     @relation(fields: [gameId], references: [id])
  winner  Boolean?
  ongoing Boolean  @default(true)

  @@id([gameId, userId])
}
